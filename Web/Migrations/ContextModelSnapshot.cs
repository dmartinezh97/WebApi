// <auto-generated />
using System;
using Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Web.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entidades.Eventos.EVENTOS", b =>
                {
                    b.Property<long>("IdEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdNegocio")
                        .HasColumnType("bigint");

                    b.Property<string>("ImgCabecera")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaximoVentas")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEvento");

                    b.HasIndex("IdNegocio");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("Entidades.Negocios.NEGOCIOS", b =>
                {
                    b.Property<long>("IdNegocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgCabecera")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNegocio");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasFilter("[Slug] IS NOT NULL");

                    b.ToTable("Negocios");
                });

            modelBuilder.Entity("Entidades.Negocios.NEGOCIOUSUARIO", b =>
                {
                    b.Property<long>("IdNegocioUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IdNegocio")
                        .HasColumnType("bigint");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("bigint");

                    b.HasKey("IdNegocioUsuario");

                    b.HasIndex("IdNegocio");

                    b.HasIndex("IdUsuario");

                    b.ToTable("NegocioUsuario");
                });

            modelBuilder.Entity("Entidades.Servicios.SERVICIOS", b =>
                {
                    b.Property<long>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CantidadMaximaPorPersona")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoServicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaFinVenta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicioVenta")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ID_EVENTO")
                        .HasColumnType("bigint");

                    b.Property<long>("IdEvento")
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<double>("PrecioEnPuerta")
                        .HasColumnType("float");

                    b.Property<bool>("Visibilidad")
                        .HasColumnType("bit");

                    b.HasKey("IdServicio");

                    b.HasIndex("ID_EVENTO");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("Entidades.Usuarios.USUARIOS", b =>
                {
                    b.Property<long>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Entidades.Eventos.EVENTOS", b =>
                {
                    b.HasOne("Entidades.Negocios.NEGOCIOS", "NEGOCIO")
                        .WithMany()
                        .HasForeignKey("IdNegocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NEGOCIO");
                });

            modelBuilder.Entity("Entidades.Negocios.NEGOCIOUSUARIO", b =>
                {
                    b.HasOne("Entidades.Negocios.NEGOCIOS", "NEGOCIOS")
                        .WithMany()
                        .HasForeignKey("IdNegocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Usuarios.USUARIOS", "USUARIOS")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NEGOCIOS");

                    b.Navigation("USUARIOS");
                });

            modelBuilder.Entity("Entidades.Servicios.SERVICIOS", b =>
                {
                    b.HasOne("Entidades.Eventos.EVENTOS", "EVENTOS")
                        .WithMany()
                        .HasForeignKey("ID_EVENTO");

                    b.Navigation("EVENTOS");
                });
#pragma warning restore 612, 618
        }
    }
}
