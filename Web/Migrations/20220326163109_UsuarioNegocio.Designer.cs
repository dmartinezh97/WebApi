// <auto-generated />
using System;
using Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Web.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220326163109_UsuarioNegocio")]
    partial class UsuarioNegocio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entidades.Negocios.NEGOCIOS", b =>
                {
                    b.Property<long>("ID_NEGOCIO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ID_TIPO_NEGOCIO")
                        .HasColumnType("bigint");

                    b.Property<string>("IMG_CABECERA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LOGO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NOMBRE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_NEGOCIO");

                    b.HasIndex("ID_TIPO_NEGOCIO");

                    b.ToTable("NEGOCIOS");
                });

            modelBuilder.Entity("Entidades.TipoNegocio.TIPO_NEGOCIO", b =>
                {
                    b.Property<long>("ID_TIPO_NEGOCIO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NOMBRE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_TIPO_NEGOCIO");

                    b.ToTable("TIPO_NEGOCIO");
                });

            modelBuilder.Entity("Entidades.Usuarios.USUARIOS", b =>
                {
                    b.Property<long>("ID_USUARIO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("APELLIDOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMAIL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FECHA_NACIMIENTO")
                        .HasColumnType("datetime2");

                    b.Property<string>("NOMBRE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PASSWORD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TELEFONO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USUARIO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_USUARIO");

                    b.ToTable("USUARIOS");
                });

            modelBuilder.Entity("Entidades.Usuarios.USUARIO_NEGOCIO", b =>
                {
                    b.Property<long>("ID_USUARIO_NEGOCIO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ID_NEGOCIO")
                        .HasColumnType("bigint");

                    b.Property<long>("ID_USUARIO")
                        .HasColumnType("bigint");

                    b.HasKey("ID_USUARIO_NEGOCIO");

                    b.HasIndex("ID_NEGOCIO");

                    b.HasIndex("ID_USUARIO");

                    b.ToTable("USUARIO_NEGOCIO");
                });

            modelBuilder.Entity("Entidades.Negocios.NEGOCIOS", b =>
                {
                    b.HasOne("Entidades.TipoNegocio.TIPO_NEGOCIO", "TIPO_NEGOCIO")
                        .WithMany()
                        .HasForeignKey("ID_TIPO_NEGOCIO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TIPO_NEGOCIO");
                });

            modelBuilder.Entity("Entidades.Usuarios.USUARIO_NEGOCIO", b =>
                {
                    b.HasOne("Entidades.Negocios.NEGOCIOS", "NEGOCIOS")
                        .WithMany()
                        .HasForeignKey("ID_NEGOCIO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Usuarios.USUARIOS", "USUARIOS")
                        .WithMany()
                        .HasForeignKey("ID_USUARIO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NEGOCIOS");

                    b.Navigation("USUARIOS");
                });
#pragma warning restore 612, 618
        }
    }
}
